{"version":3,"file":"static/js/547.b9e2b964.chunk.js","mappings":"oOACA,EAAuB,wBAAvB,EAAuD,yBAAvD,EAAsF,uB,SCkCtF,EA9BkB,SAAC,GAA+B,IAA7BA,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC7B,GAAsCC,EAAAA,EAAAA,UAASD,GAA/C,eAAOE,EAAP,KAAoBC,EAApB,KAQA,OACE,kBAAMC,UAAWC,EAAaN,SAPhC,SAAsBO,GACpBA,EAAEC,iBAEFR,EAASG,EACV,EAGC,WACE,kBACEE,UAAWC,EACXG,MAAON,EACPO,YAAY,gBACZC,aAAa,MACbC,SAAU,SAAAL,GAAC,OAAIH,EAAeG,EAAEM,OAAOJ,MAA5B,EACXK,KAAK,YACLC,KAAK,UAEP,mBAAQV,UAAWC,EAAYS,KAAK,aAGzC,E,kBCuBD,EAzCe,WAAO,IAAD,EACbC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAA+B,OAAnBJ,EAASK,MAAT,UAA0BL,EAASK,aAAnC,aAA0B,EAAgBlB,YAAc,GAE1E,GAA0BD,EAAAA,EAAAA,UAASkB,GAAnC,eAAOE,EAAP,KAAcC,EAAd,KAEA,GAKIC,EAAAA,EAAAA,GAAS,CACXC,IAAK,gBACLC,cAAe,CAAEJ,MAAOA,KANlBK,EADR,EACEC,KACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,MACAC,EAJF,EAIEA,aAgBF,OALAC,EAAAA,EAAAA,YAAU,WAERd,GACD,GAAE,CAACA,IAEAY,GAAc,SAACG,EAAA,EAAD,KAGhB,iBAAK5B,UAAU,YAAf,WACE,SAAC,EAAD,CAAWL,SAdf,SAAsBsB,GACpBC,EAASD,GACTS,EAAa,CAAET,MAAAA,GAChB,EAWsCrB,YAAaqB,KAEhD,SAACY,EAAA,EAAD,CAASC,QAASN,EAAlB,UACE,SAACO,EAAA,EAAD,CAAWT,OAAQA,EAAQxB,YAAamB,QAI/C,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/Movies/SearchBar/SearchBar.module.css?7834","pages/Movies/SearchBar/index.jsx","pages/Movies/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__Fpzp3\",\"input\":\"SearchBar_input__fq8Y8\",\"btn\":\"SearchBar_btn__GGHvK\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './SearchBar.module.css';\n\nconst SearchBar = ({ onSubmit, storedQuery }) => {\n  const [searchQuery, setSearchQuery] = useState(storedQuery);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    onSubmit(searchQuery);\n  }\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <input\n        className={styles.input}\n        value={searchQuery}\n        placeholder=\"Search movies\"\n        autoComplete=\"off\"\n        onChange={e => setSearchQuery(e.target.value)}\n        name=\"movieName\"\n        type=\"text\"\n      />\n      <button className={styles.btn} type=\"submit\"></button>\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func,\n  storedQuery: PropTypes.string,\n};\n\nexport default SearchBar;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport useFetch from 'hooks/useFetch';\n\nimport MovieList from 'components/MovieList';\nimport SearchBar from './SearchBar';\nimport Spinner from 'components/Spinner';\nimport ErrorPage from 'pages/ErrorPage';\n\nconst Movies = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const baseValue = location.state !== null ? location.state?.searchQuery : '';\n\n  const [query, setQuery] = useState(baseValue);\n\n  const {\n    data: movies,\n    isLoading,\n    error,\n    updateParams,\n  } = useFetch({\n    url: '/search/movie',\n    initialParams: { query: query },\n  });\n\n  function handleSubmit(query) {\n    setQuery(query);\n    updateParams({ query });\n  }\n\n  useEffect(() => {\n    // Reset state after page refresh\n    navigate();\n  }, [navigate]);\n\n  if (error) return <ErrorPage />;\n\n  return (\n    <div className=\"container\">\n      <SearchBar onSubmit={handleSubmit} storedQuery={query} />\n\n      <Spinner loading={isLoading}>\n        <MovieList movies={movies} searchQuery={query} />\n      </Spinner>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["onSubmit","storedQuery","useState","searchQuery","setSearchQuery","className","styles","e","preventDefault","value","placeholder","autoComplete","onChange","target","name","type","location","useLocation","navigate","useNavigate","baseValue","state","query","setQuery","useFetch","url","initialParams","movies","data","isLoading","error","updateParams","useEffect","ErrorPage","Spinner","loading","MovieList"],"sourceRoot":""}