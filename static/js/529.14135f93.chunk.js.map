{"version":3,"file":"static/js/529.14135f93.chunk.js","mappings":"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","sources":["utils/getGenres.js","utils/getYear.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieInfo/MovieInfo.module.css?8bdf","pages/MovieDetails/MovieInfo/index.jsx","webpack://goit-react-hw-05-movies/./src/components/BackButton/BackButton.module.css?d3a5","components/BackButton/index.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieInfoButtons/MovieInfoButtons.module.css?81c3","pages/MovieDetails/MovieInfoButtons/index.jsx","pages/MovieDetails/index.jsx","utils/getImagePath.js"],"sourcesContent":["export const getGenres = genres => {\n  const allGenres = genres\n    .map(el => {\n      return el.name;\n    })\n    .join(', ');\n  return allGenres;\n};\n","export const getYearOfDate = date => {\n  const dateObj = new Date(date);\n  return `(${dateObj.getFullYear()})`;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieInfo_container__kVZsU\",\"img\":\"MovieInfo_img__-4N-v\",\"list\":\"MovieInfo_list__M8GDo\",\"item\":\"MovieInfo_item__-jqCW\",\"title\":\"MovieInfo_title__6F-Ti\",\"subtitle\":\"MovieInfo_subtitle__adBKg\",\"description\":\"MovieInfo_description__le3SE\",\"overview\":\"MovieInfo_overview__DOes5\"};","import PropTypes from 'prop-types';\n\nimport { getGenres } from 'utils/getGenres';\nimport { getYearOfDate } from 'utils/getYear';\nimport { getImagePath } from 'utils/getImagePath';\n\nimport styles from './MovieInfo.module.css';\n\nconst MovieInfo = ({ movie }) => {\n  return (\n    <>\n      {movie &&\n        [movie].map(\n          ({\n            id,\n            title,\n            overview,\n            poster_path,\n            genres,\n            release_date,\n            vote_average,\n          }) => (\n            <div key={`${id}`} className={styles.container}>\n              {poster_path && (\n                <img\n                  className={styles.img}\n                  src={getImagePath({ size: 300, path: poster_path })}\n                  alt=\"\"\n                />\n              )}\n              <ul className={styles.list}>\n                <li className={styles.item}>\n                  <h2 className={styles.title}>\n                    {title} {getYearOfDate(release_date)}\n                  </h2>\n                  <p className={styles.description}>\n                    UserScore: {Math.floor(vote_average * 10) + '%'}\n                  </p>\n                </li>\n                <li className={styles.item}>\n                  <h3 className={styles.subtitle}>Overview </h3>\n                  <p className={`${styles.description} ${styles.overview}`}>\n                    {overview || 'Overview not available'}\n                  </p>\n                </li>\n                <li className={styles.item}>\n                  <h3 className={styles.subtitle}>Genres </h3>\n                  <p className={styles.description}>\n                    {getGenres(genres) || 'Unknown'}\n                  </p>\n                </li>\n              </ul>\n            </div>\n          )\n        )}\n    </>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object,\n};\n\nexport default MovieInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"BackButton_btn__-wN0+\"};","import PropTypes from 'prop-types';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport styles from './BackButton.module.css';\n\nconst BackButton = ({ query }) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const redirectBack = e => {\n    if (location.state?.prevPage.includes('/movies')) {\n      navigate('/movies', { state: { searchQuery: query } });\n      return;\n    }\n    navigate('/');\n  };\n\n  return <button className={styles.btn} onClick={redirectBack}></button>;\n};\n\nBackButton.propTypes = { query: PropTypes.string };\n\nexport default BackButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"MovieInfoButtons_box__TqONF\",\"text\":\"MovieInfoButtons_text__ZH9iy\",\"btn\":\"MovieInfoButtons_btn__v6Y0V\"};","import { useLocation, useNavigate } from 'react-router-dom';\n\nimport styles from './MovieInfoButtons.module.css';\n\nconst MovieInfoButtons = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const redirectToCast = e => {\n    navigate('cast', {\n      state: {\n        prevPage: location.state.prevPage,\n        searchQuery: location.state?.searchQuery,\n      },\n    });\n  };\n\n  const redirectToReviews = e => {\n    navigate('reviews', {\n      state: {\n        prevPage: location.state.prevPage,\n        searchQuery: location.state?.searchQuery,\n      },\n    });\n  };\n\n  return (\n    <div className={styles.box}>\n      <p className={styles.text}>Additional information</p>\n      <button onClick={redirectToCast} className={styles.btn} data-info=\"cast\">\n        Cast\n      </button>\n      <button\n        onClick={redirectToReviews}\n        className={styles.btn}\n        data-info=\"reviews\"\n      >\n        Reviews\n      </button>\n    </div>\n  );\n};\n\nexport default MovieInfoButtons;\n","import { Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport useFetch from 'hooks/useFetch';\n\nimport Spinner from 'components/Spinner';\nimport MovieInfo from 'pages/MovieDetails/MovieInfo';\nimport BackButton from 'components/BackButton';\nimport MovieInfoButtons from './MovieInfoButtons';\nimport ErrorPage from 'pages/ErrorPage';\nimport PageLoader from 'components/PageLoader';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n\n  const {\n    data: movie,\n    isLoading,\n    error,\n  } = useFetch({\n    url: `/movie/${movieId}`,\n  });\n\n  if (error) return <ErrorPage />;\n\n  return (\n    <div className=\"container\">\n      <BackButton query={location.state?.searchQuery} />\n\n      <Spinner loading={isLoading} position=\"center\">\n        <MovieInfo movie={movie} />\n        <MovieInfoButtons />\n      </Spinner>\n\n      <Suspense fallback={<PageLoader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","export function getImagePath({ size, path } = {}) {\n  if (path === null) return;\n  return `https://image.tmdb.org/t/p/w${size}/${path}`;\n}\n"],"names":["getGenres","genres","map","el","name","join","getYearOfDate","date","dateObj","Date","getFullYear","movie","id","title","overview","poster_path","release_date","vote_average","className","styles","src","getImagePath","size","path","alt","Math","floor","query","navigate","useNavigate","location","useLocation","onClick","e","state","prevPage","includes","searchQuery","movieId","useParams","useFetch","url","data","isLoading","error","ErrorPage","Spinner","loading","position","Suspense","fallback","PageLoader"],"sourceRoot":""}