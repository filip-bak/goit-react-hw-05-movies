{"version":3,"file":"static/js/655.ac1c0609.chunk.js","mappings":"2NACA,EAAuB,0BAAvB,EAAwD,0BAAxD,EAA2F,4BAA3F,EAAiI,6B,SC2BjI,EAvBoB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACrB,OACE,eAAIC,UAAWC,EAAf,gBACGF,QADH,IACGA,OADH,EACGA,EAASG,QAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACpB,gBAAaN,UAAWC,EAAxB,WACE,gBAAID,UAAWC,EAAf,qBAAuCI,MACvC,cAAGL,UAAWC,EAAd,SAA+BK,MAFxBF,EADW,KAQ3B,ECfD,EAAuB,8BCUvB,EATwB,WACtB,OACE,cAAGJ,UAAWC,EAAd,qGAKH,E,SCmCD,EAlCgB,WACd,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAIIE,EAAAA,EAAAA,GAAS,CACXC,IAAI,UAAD,OAAYH,EAAZ,cAJGR,EADR,EACEY,KACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,OAKFC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAUC,SAASC,cAAc,yBAGvC,OAFAF,EAAQG,UAAUC,IAAI,cAEf,WACLJ,EAAQG,UAAUE,OAAO,aAC1B,CACF,GAAE,IAEH,IAAMC,EAAsC,KAArB,OAAPtB,QAAO,IAAPA,OAAA,EAAAA,EAASG,QAAQoB,QAEjC,OAAIT,GAAc,SAACU,EAAA,EAAD,KAGhB,0BACE,SAACC,EAAA,EAAD,CAASC,QAASb,EAAWc,SAAS,SAAtC,SACGL,GAAU,SAAC,EAAD,KAAsB,SAAC,EAAD,CAAatB,QAASA,OAI9D,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/Reviews/ReviewCards/ReviewCards.module.css?3382","pages/Reviews/ReviewCards/index.jsx","webpack://goit-react-hw-05-movies/./src/pages/Reviews/ReviewsNotFound/ReviewsNotFound.module.css?5178","pages/Reviews/ReviewsNotFound/index.jsx","pages/Reviews/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ReviewCards_list__PvRzN\",\"item\":\"ReviewCards_item__7NDi8\",\"author\":\"ReviewCards_author__771+m\",\"content\":\"ReviewCards_content__b++6s\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './ReviewCards.module.css';\n\nconst ReviewCards = ({ reviews }) => {\n  return (\n    <ul className={styles.list}>\n      {reviews?.results.map(({ id, author, content }) => (\n        <li key={id} className={styles.item}>\n          <h4 className={styles.author}>Author: {author}</h4>\n          <p className={styles.content}>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nReviewCards.propTypes = {\n  reviews: PropTypes.shape({\n    id: PropTypes.number,\n    page: PropTypes.number,\n    results: PropTypes.arrayOf(PropTypes.object).isRequired,\n    total_pages: PropTypes.number,\n    total_results: PropTypes.number,\n  }),\n};\n\nexport default ReviewCards;\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"ReviewsNotFound_text__DSEss\"};","import styles from './ReviewsNotFound.module.css';\n\nconst ReviewsNotFound = () => {\n  return (\n    <p className={styles.text}>\n      Currently, no reviews are available for this movie. Please check back\n      later for updates.\n    </p>\n  );\n};\n\nexport default ReviewsNotFound;\n","import { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport useFetch from 'hooks/useFetch';\n\nimport Spinner from 'components/Spinner';\nimport ReviewCards from './ReviewCards';\nimport ReviewsNotFound from './ReviewsNotFound';\nimport ErrorPage from 'pages/ErrorPage';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const {\n    data: reviews,\n    isLoading,\n    error,\n  } = useFetch({\n    url: `/movie/${movieId}/reviews`,\n  });\n\n  useEffect(() => {\n    // Reviews button styling\n    const buttons = document.querySelector('[data-info=\"reviews\"]');\n    buttons.classList.add('active-btn');\n\n    return () => {\n      buttons.classList.remove('active-btn');\n    };\n  }, []);\n\n  const isEmpty = reviews?.results.length === 0;\n\n  if (error) return <ErrorPage />;\n\n  return (\n    <div>\n      <Spinner loading={isLoading} position=\"center\">\n        {isEmpty ? <ReviewsNotFound /> : <ReviewCards reviews={reviews} />}\n      </Spinner>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["reviews","className","styles","results","map","id","author","content","movieId","useParams","useFetch","url","data","isLoading","error","useEffect","buttons","document","querySelector","classList","add","remove","isEmpty","length","ErrorPage","Spinner","loading","position"],"sourceRoot":""}