{"version":3,"file":"static/js/348.4affd317.chunk.js","mappings":"oOACA,EAAuB,wBAAvB,EAAsD,wBAAtD,EAA4F,+BAA5F,EAAiI,uBAAjI,EAA+J,wBAA/J,EAAmM,6B,SCoCnM,EA/BkB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACnB,OACE,eAAIC,UAAWC,EAAf,gBACGF,QADH,IACGA,OADH,EACGA,EAAOG,KAAKC,KAAI,WAAwCC,GAAxC,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACf,gBAAsBR,UAAWC,EAAjC,UACoB,OAAjBO,GACC,gBACER,UAAWC,EACXQ,KAAKC,EAAAA,EAAAA,GAAa,CAAEC,KAAM,IAAKC,KAAMJ,IACrCK,IAAI,MAGN,gBAAKb,UAAWC,KAGlB,cAAGD,UAAWC,EAAd,SAA4BK,GAAQ,SACpC,eAAGN,UAAWC,EAAd,wBAA4CM,GAAa,WAZ3D,UAAYF,GAAZ,OAAiBD,GADF,KAkBtB,EC1BD,EAAuB,2BCSvB,EARqB,WACnB,OACE,cAAGJ,UAAWC,EAAd,wEAIH,E,SCoCD,EAlCa,WACX,IAAQa,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAIIE,EAAAA,EAAAA,GAAS,CACXC,IAAI,UAAD,OAAYH,EAAZ,cAJGf,EADR,EACEmB,KACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,OAKFC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAUC,SAASC,cAAc,sBAGvC,OAFAF,EAAQG,UAAUC,IAAI,cAEf,WACLJ,EAAQG,UAAUE,OAAO,aAC1B,CACF,GAAE,IAEH,IAAMC,EAAiC,KAAlB,OAAL7B,QAAK,IAALA,OAAA,EAAAA,EAAOG,KAAK2B,QAE5B,OAAIT,GAAc,SAACU,EAAA,EAAD,KAGhB,0BACE,SAACC,EAAA,EAAD,CAASC,QAASb,EAAWc,SAAS,SAAtC,SACGL,GAAU,SAAC,EAAD,KAAmB,SAAC,EAAD,CAAW7B,MAAOA,OAIvD,C,sBC1CM,SAASW,IAAmC,IAAD,yDAAJ,CAAC,EAAhBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,KACnC,GAAa,OAATA,EACJ,MAAM,+BAAN,OAAsCD,EAAtC,YAA8CC,EAC/C,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/Cast/CastCards/CastCards.module.css?4666","pages/Cast/CastCards/index.jsx","webpack://goit-react-hw-05-movies/./src/pages/Cast/CastNotFound/CastNotFound.module.css?66bd","pages/Cast/CastNotFound/index.jsx","pages/Cast/index.jsx","utils/getImagePath.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"CastCards_list__l0fYL\",\"item\":\"CastCards_item__iwS4G\",\"placeholder\":\"CastCards_placeholder__UGawg\",\"img\":\"CastCards_img__drxAt\",\"name\":\"CastCards_name__-4l49\",\"character\":\"CastCards_character__6+F5K\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getImagePath } from 'utils/getImagePath';\n\nimport styles from './CastCards.module.css';\n\nconst CastCards = ({ staff }) => {\n  return (\n    <ul className={styles.list}>\n      {staff?.cast.map(({ id, name, character, profile_path }, i) => (\n        <li key={`${id}${i}`} className={styles.item}>\n          {profile_path !== null ? (\n            <img\n              className={styles.img}\n              src={getImagePath({ size: 200, path: profile_path })}\n              alt=\"\"\n            />\n          ) : (\n            <div className={styles.placeholder}></div>\n          )}\n\n          <p className={styles.name}>{name || '???'}</p>\n          <p className={styles.character}>Charakter: {character || '???'}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nCastCards.propTypes = {\n  staff: PropTypes.shape({\n    cast: PropTypes.arrayOf(PropTypes.object),\n    crew: PropTypes.arrayOf(PropTypes.object),\n    id: PropTypes.number,\n  }),\n};\n\nexport default CastCards;\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"CastNotFound_text__0usXq\"};","import styles from './CastNotFound.module.css';\n\nconst CastNotFound = () => {\n  return (\n    <p className={styles.text}>\n      Currently, no cast information is available for this movie.\n    </p>\n  );\n};\n\nexport default CastNotFound;\n","import { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport useFetch from 'hooks/useFetch';\n\nimport Spinner from 'components/Spinner';\nimport CastCards from './CastCards';\nimport CastNotFound from './CastNotFound';\nimport ErrorPage from 'pages/ErrorPage';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const {\n    data: staff,\n    isLoading,\n    error,\n  } = useFetch({\n    url: `/movie/${movieId}/credits`,\n  });\n\n  useEffect(() => {\n    // Cast button styling\n    const buttons = document.querySelector('[data-info=\"cast\"]');\n    buttons.classList.add('active-btn');\n\n    return () => {\n      buttons.classList.remove('active-btn');\n    };\n  }, []);\n\n  const isEmpty = staff?.cast.length === 0;\n\n  if (error) return <ErrorPage />;\n\n  return (\n    <div>\n      <Spinner loading={isLoading} position=\"center\">\n        {isEmpty ? <CastNotFound /> : <CastCards staff={staff} />}\n      </Spinner>\n    </div>\n  );\n};\n\nexport default Cast;\n","export function getImagePath({ size, path } = {}) {\n  if (path === null) return;\n  return `https://image.tmdb.org/t/p/w${size}/${path}`;\n}\n"],"names":["staff","className","styles","cast","map","i","id","name","character","profile_path","src","getImagePath","size","path","alt","movieId","useParams","useFetch","url","data","isLoading","error","useEffect","buttons","document","querySelector","classList","add","remove","isEmpty","length","ErrorPage","Spinner","loading","position"],"sourceRoot":""}